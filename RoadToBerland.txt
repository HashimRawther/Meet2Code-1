#include <bits/stdc++.h>
 
using namespace std;
 
#define pii pair<int, int>
 
const int MAXN = 101;
 
bool vis[MAXN];
vector<int> ans, col(MAXN);
vector<pii> G[MAXN];
 
void dfs(int v, int c) {
   if (c) ans.push_back(v);
   vis[v]=true;
   col[v]=c;
 
   for (auto u : G[v]) {
      if (vis[u.first]) {
         if (c^u.second^col[u.first]^1) {
            cout<<"Impossible\n";
            exit(0);
         }
      } else dfs(u.first, c^u.second^1);
   }
}
 
int main() {
   int n, m;
   cin>>n>>m;
 
   for (int i=0; i<m; ++i) {
      int a, b, c;
      cin>>a>>b>>c;
      G[a].push_back({b, c}), G[b].push_back({a, c});
   }
   for (int i=0; i<n; ++i) {
      if (!vis[i]) dfs(i, 0);
   }
   cout<<ans.size()<<"\n";
   for (auto u : ans) cout<<u<<" ";
   cout<<endl;
}